from aiogram import types
from create import dp
from aiogram.dispatcher.filters import Text
from random import randint
import sweets


game_mode = False   # –∏–≥—Ä–∞ –Ω–µ –∑–∞–ø—É—â–µ–Ω–∞. –ò–Ω–∞—á–µ - –∑–∞–ø—É—â–µ–Ω–∞

@dp.message_handler(commands=['start', '—Å—Ç–∞—Ä—Ç', 'go'])
async def mes_start(message: types.Message):
    sweets.total = 150
    sweets.step = 1
    user = message.from_user.full_name
    await message.answer(f'–ü—Ä–∏–≤–µ—Ç, { user }! –î–∞–≤–∞–π —Å—ã–≥—Ä–∞–µ–º –≤ –∫–æ–Ω—Ñ–µ—Ç–∫–∏!  '
                         '–ü—Ä–∞–≤–∏–ª–∞ –≤ /rules. –ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –≤—Å–µ—Ö –∫–æ–º–∞–Ω–¥ - ' 
                         '–Ω–∞–±–µ—Ä–∏ /help. –ò–≥—Ä–∞—Ç—å - /game. ')


@dp.message_handler(commands=['help', '—Ö–µ–ª–ø'])
async def mes_help(message: types.Message):
    await message.answer(f'–°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥:\n/start\n/help\n/rules\n/total\n/set\n/game\n/stop')


@dp.message_handler(commands=['rules', '–ø—Ä–∞–≤–∏–ª–∞', '–Ω–∞—á–∞—Ç—å'])
async def mes_rules(message: types.Message):
    await message.answer('–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞ —Å—Ç–æ–ª–µ –µ—Å—Ç—å 150 –∫–æ–Ω—Ñ–µ—Ç. (–ø—Ä–æ–≤–µ—Ä–∏—Ç—å - –≤–≤–µ–¥–∏ /total). '
                         '–•–æ—á–µ—à—å –∏–∑–º–µ–Ω–∏—Ç—å - –≤–≤–µ–¥–∏ /set –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω-—Ä, "/set 90"). '
                         '–ü–µ—Ä–≤—ã–π —Ö–æ–¥ –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç—Å—è —Å–ª—É—á–∞–π–Ω—ã–º –æ–±—Ä–∞–∑–æ–º. '
                         '–•–æ–¥—è—â–∏–π –±–µ—Ä—ë—Ç –æ—Ç 1 –¥–æ 28 —à—Ç. –∑–∞ –æ–¥–∏–Ω —Ö–æ–¥. ' 
                         '–°–¥–µ–ª–∞–≤—à–∏–π –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ö–æ–¥ –≤—ã–∏–≥—Ä—ã–≤–∞–µ—Ç (–∑–∞–±–∏—Ä–∞–µ—Ç –≤—Å–µ –∫–æ–Ω—Ñ–µ—Ç—ã). ' 
                         '–ü–æ—Å–º–æ—Ç—Ä–µ—Ç—å —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –∫–æ–º–∞–Ω–¥ - –≤–≤–µ–¥–∏ /help, –Ω–∞—á–∞—Ç—å –∏–≥—Ä—É - /game, '
                         '–∑–∞–∫–æ–Ω—á–∏—Ç—å –∏–≥—Ä—É - /stop. ')    


@dp.message_handler(commands=['total', '–≤—Å–µ–≥–æ'])
async def mes_total(message: types.Message):
    await message.answer(f'–ü–æ —É–º–æ–ª—á–∞–Ω–∏—é –Ω–∞ —Å—Ç–æ–ª–µ –≤ –Ω–∞—á–∞–ª–µ –∏–≥—Ä—ã {sweets.total} –∫–æ–Ω—Ñ–µ—Ç. –•–æ—á–µ—à—å '
                         '–∏–∑–º–µ–Ω–∏—Ç—å? –ù–∞–±–µ—Ä–∏ /set –∏ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —á–µ—Ä–µ–∑ –ø—Ä–æ–±–µ–ª (–Ω-—Ä, "/set 90"). '
                         '–ù–∞—á–∞—Ç—å –∏–≥—Ä—É - /game. –°–ø–∏—Å–æ–∫ –∫–æ–º–∞–Ω–¥ - /help. ')


@dp.message_handler(commands=['set', '—Å–µ—Ç'])
async def mes_settings(message: types.Message):
    global game_mode
    user = message.from_user.full_name
    if game_mode:
        await message.answer(f'{ user }, —Å–Ω–∞—á–∞–ª–∞ –≤—ã–π–¥–∏ –∏–∑ –∏–≥—Ä—ã - –≤–≤–µ–¥–∏ /stop. ')
    else:
        count = int(message.text.split()[1])
        sweets.total = count
        await message.answer(f'–ü–µ—Ä–≤–æ–Ω–∞—á–∞–ª—å–Ω–æ–µ –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –∫–æ–Ω—Ñ–µ—Ç —É—Å—Ç–∞–Ω–æ–≤–ª–µ–Ω–æ - {sweets.total} —à—Ç—É–∫. ')
            

@dp.message_handler(commands=['candies', 'sweets', '–∫–æ–Ω—Ñ–µ—Ç—ã', 'game', '–∏–≥—Ä–∞', '–∏–≥—Ä–∞—Ç—å'])
async def candies_game( message: types.Message ):
    global game_mode
    if not game_mode:
        game_mode = True 
        await sweets.new_game( message )
    else:
        if not await sweets.player( message ):
            game_mode = False


@dp.message_handler(commands=['stop', '—Å—Ç–æ–ø'] )
async def stop_game( message: types.Message ):
    global game_mode
    user = message.from_user.full_name
    if game_mode:
        game_mode = False
        sweets.total = 150
        sweets.step = 1
        await message.answer( f'{user}, —É–∂–µ —É—Ö–æ–¥–∏—à—å? üò¢... '
                             '–ú—ã –≤—Å–µ–≥–¥–∞ —Ç–µ–±—è –∂–¥–µ–º. –ü—Ä–æ—Å—Ç–æ –≤–≤–µ–¥–∏ /start ...üòÉ')
        # await mes_start( message )
    else:
        sweets.total = 150
        sweets.step = 1
        await message.answer('–ò–≥—Ä–∞ –æ–∫–æ–Ω—á–µ–Ω–∞. –î–ª—è –Ω–æ–≤–æ–π –∏–≥—Ä—ã –Ω–∞–∂–º–∏ /game, ' 
                             '–¥–ª—è –≤—Å–µ–≥–æ –æ—Å—Ç–∞–ª—å–Ω–æ–≥–æ - /start. ')    


@dp.message_handler(text=['–¥–∞ –ø–æ—à–µ–ª —Ç—ã', '–î–∞ –ø–æ—à–µ–ª —Ç—ã', '—Ç—å—Ñ—É', '—Ç–∞–∫ –Ω–µ—á–µ—Å—Ç–Ω–æ', '–ª–∞–∂–∞', '—Å–≤–æ–ª–æ—á—å'])
async def mes_curce(message: types.Message):
    await message.answer('–°–∞–º —Ç–∞–∫–æ–π! –ü—Ä–æ—Å—Ç–æ –∏–≥—Ä–∞—Ç—å –Ω–µ —É–º–µ–µ—à—å! üòÉ ')


@dp.message_handler()
async def mes_rest(message: types.Message):  
    global game_mode
    if game_mode and message.text.isdigit():
        await candies_game(message)
    else:
        await message.answer(f'–ù–µ –ø–æ–Ω—è–ª —Ç–≤–æ–µ–≥–æ {message.text}... '
                             '–ü–æ–ø—Ä–æ–±—É–π —Å–Ω–æ–≤–∞ –∏–ª–∏ –∂–º–∏ /start! ')
      